Gallery Component Documentation
==============================

1. Component Structure
- Responsive image grid
- Lightbox modal for full-size viewing
- Category filtering system
- Lazy loading implementation

2. Technical Implementation
```jsx
// Gallery.jsx
import { useState } from 'react';

export default function Gallery({ images }) {
  const [selectedImage, setSelectedImage] = useState(null);

  return (
    <section className="gallery-section">
      <div className="filter-controls">
        <button onClick={() => filterImages('all')}>All</button>
        <button onClick={() => filterImages('nature')}>Nature</button>
        <button onClick={() => filterImages('urban')}>Urban</button>
      </div>

      <div className="image-grid">
        {images.map((img) => (
          <div 
            key={img.id} 
            className="grid-item"
            onClick={() => setSelectedImage(img)}
          >
            <img 
              src={img.thumbnail} 
              alt={img.description}
              loading="lazy"
            />
          </div>
        ))}
      </div>

      {selectedImage && (
        <div className="lightbox">
          <img src={selectedImage.fullSize} alt={selectedImage.description} />
          <button 
            className="close-btn"
            onClick={() => setSelectedImage(null)}
          >
            Ã—
          </button>
        </div>
      )}
    </section>
  );
}
```

3. Styling Approach
```css
/* gallery.css */
.gallery-section {
  padding: 2rem 5%;
}

.image-grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
  gap: 1rem;
  margin-top: 1.5rem;
}

.grid-item {
  cursor: pointer;
  transition: transform 0.3s ease;
}

.grid-item:hover {
  transform: scale(1.03);
}

.lightbox {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(0,0,0,0.9);
  display: flex;
  align-items: center;
  justify-content: center;
}

.lightbox img {
  max-width: 90%;
  max-height: 90vh;
}

.close-btn {
  position: absolute;
  top: 2rem;
  right: 2rem;
  font-size: 2rem;
  color: white;
  background: none;
  border: none;
}
```

4. Interactive Features
- Click-to-expand lightbox functionality
- Image category filtering
- Hover zoom effects
- Responsive grid layout
- Accessibility features for screen readers
- Lazy loading for performance optimization